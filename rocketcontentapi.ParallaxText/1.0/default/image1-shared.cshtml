@inherits RocketContentAPI.Components.RocketContentAPITokens<Simplisity.SimplisityRazor>
@using DNNrocketAPI;
@using Simplisity;
@using RocketContentAPI.Components;
@using DNNrocketAPI.Components;
@using RocketPortal.Components;
@{
    var articleData = (ArticleLimpet)Model.GetDataObject("articledata");
    var articleRowData = (ArticleRowLimpet)Model.GetDataObject("articlerow");
    var appThemeView = (AppThemeLimpet)Model.GetDataObject("appthemeview");
    var appThemeAdmin = (AppThemeLimpet)Model.GetDataObject("appthemeadmin");
    var appThemeSystem = (AppThemeSystemLimpet)Model.GetDataObject("appthemesystem");
    var moduleData = (ModuleContentLimpet)Model.GetDataObject("modulesettings");
    var portalData = (PortalLimpet)Model.GetDataObject("portaldata");
    var globalSettings = new SystemGlobalData();
    var sessionParams = Model.SessionParamsData;

    var info = new SimplisityInfo();
    if (articleRowData != null && articleRowData.Info != null)
    {
        info = articleRowData.Info;
    }
    AddProcessDataResx(appThemeView, true);
    AddProcessData("resourcepath", "/DesktopModules/DNNrocketModules/RocketContent/App_LocalResources/");
}


<input id="xmlupdateimages" type="hidden" value=""></input>

<div class="imginput panel panel-default">

    <div class="panel-heading clearfix">

        @ButtonText("upload1image,undoimage", "imagebuttons pull-right")

        <span class="panel-title">Image</span>
    </div>

    <div class="panel-body">

        <div id="captionscheckbox" style="display: none;">
            @CheckBox(info, "genxml/checkbox/showcaptions", "Show Captions", " ")
        </div>



        <div id="imageselectlist" style="display: none;"></div>

        <div class="table-responsive">

            <table class="w3-table w3-border" id="imagelist">
                <tr>
                    <th>Image</th>
                    <th>Alternative Text</th>
                    @if (Model.GetSetting("imglistcolumns").Contains("w"))
                    {
                    <th>Width</th>
                    }
                    @if (Model.GetSetting("imglistcolumns").Contains("h"))
                    {
                    <th>Heigth)</th>
                    }
                    <th></th>
                </tr>

                @{
                var imglp = 1;
                var imageurl = info.GetXmlProperty("genxml/imgs/genxml[" + imglp + "]/hidden/imageurl");
                if (imageurl != "")
                {

                <tr class="imageitem">
                    <td>
                        @HiddenField(info, "genxml/imgs/genxml[" + imglp + "]/hidden/ref"," update='imgsave' ")
                        @HiddenField(info, "genxml/imgs/genxml[" + imglp + "]/hidden/filename", " update='imgsave' ")
                        @HiddenField(info, "genxml/imgs/genxml[" + imglp + "]/hidden/imageurl", " update='imgsave' ")
                        @HiddenField(info, "genxml/imgs/genxml[" + imglp + "]/hidden/imagepath", " update='imgsave' ")
                        <img src="/DesktopModules/NBright/NBrightData/NBrightThumb.ashx?src=@(imageurl)&w=100&h=50" />
                    </td>
                    <td>@TextBox(info, "genxml/lang/genxml/imgs/genxml[" + imglp + "]/textbox/imgcaption", " update='imglang' ")</td>
                    @if (Model.GetSetting("imglistcolumns").Contains("w"))
                    {
                    <td>@TextBox(info, "genxml/imgs/genxml[" + imglp + "]/textbox/imgwidth", " update='imgsave' style='width:60px;' ", "150")</td>
                    }
                    @if (Model.GetSetting("imglistcolumns").Contains("h"))
                    {
                    <td>@TextBox(info, "genxml/imgs/genxml[" + imglp + "]/textbox/imgheight", " update='imgsave' style='width:60px;' ", "0")</td>
                    }
                    <td>@ButtonIcon(ButtonTypes.folder, "fr")</td>
                </tr>
                }

                }

            </table>

        </div>
    </div>

</div>
